/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/models/mine.glb --types 
*/

import type * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
	nodes: {
		group450465863: THREE.Mesh;
		group413415826: THREE.Mesh;
		group1270301541: THREE.Mesh;
		group874016818: THREE.Mesh;
		group611164287: THREE.Mesh;
		group865683717: THREE.Mesh;
		group715062615: THREE.Mesh;
	};
	materials: {
		mat17: THREE.MeshStandardMaterial;
		mat8: THREE.MeshStandardMaterial;
	};
	animations: [];
};

export const Mine = (props: JSX.IntrinsicElements["group"]) => {
	const { nodes, materials } = useGLTF("/models/mine.glb") as GLTFResult;

	const mineRef = useRef<THREE.Group<THREE.Object3DEventMap>>(null);

	return (
		<group {...props} dispose={null} ref={mineRef}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group450465863.geometry}
				material={materials.mat17}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group413415826.geometry}
				material={materials.mat8}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group1270301541.geometry}
				material={materials.mat8}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group874016818.geometry}
				material={materials.mat8}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group611164287.geometry}
				material={materials.mat8}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group865683717.geometry}
				material={materials.mat8}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.group715062615.geometry}
				material={materials.mat8}
			/>
		</group>
	);
};

useGLTF.preload("/models/mine.glb");
