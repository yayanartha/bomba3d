/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/models/Ship_Large.gltf --types 
*/

import type * as THREE from "three";
import { useRef } from "react";
import { Billboard, Text, useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";
import { degToRad } from "three/src/math/MathUtils.js";

type GLTFResult = GLTF & {
	nodes: {
		Ship_Large: THREE.Mesh;
	};
	materials: {
		Atlas: THREE.MeshStandardMaterial;
	};
	animations: [];
};

export const ShipLarge = (props: JSX.IntrinsicElements["group"]) => {
	const { nodes, materials } = useGLTF("models/Ship_Large.gltf") as GLTFResult;
	const group = useRef<THREE.Group<THREE.Object3DEventMap>>(null);

	return (
		<group {...props} dispose={null} ref={group}>
			<Billboard position={[-0.5, 4, 6]}>
				<Text
					fontSize={0.42}
					font="fonts/Gilroy-ExtraBold.ttf"
					textAlign="center"
				>
					Marine
					<meshStandardMaterial color="red" />
				</Text>
			</Billboard>

			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Ship_Large.geometry}
				material={materials.Atlas}
				rotation-y={degToRad(-90)}
			/>
		</group>
	);
};

useGLTF.preload("models/Ship_Large.gltf");
