/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/models/ship-pirate.glb --types 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { Billboard, Float, Text, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { degToRad } from "three/src/math/MathUtils.js";

type GLTFResult = GLTF & {
	nodes: {
		Ship_Small: THREE.Mesh;
	};
	materials: {
		Atlas: THREE.MeshStandardMaterial;
	};
	animations: GLTFAction[];
};

type ContextType = Record<
	string,
	React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export const ShipPirate = (props: JSX.IntrinsicElements["group"]) => {
	const { nodes, materials } = useGLTF("/models/ship-pirate.glb") as GLTFResult;

	const shipPirateRef = useRef<THREE.Group<THREE.Object3DEventMap>>(null);

	return (
		<group {...props} dispose={null} ref={shipPirateRef}>
			<Float speed={5} rotationIntensity={0.5} floatingRange={[0, 0.2]}>
				<Billboard position={[0, 3, 0]}>
					<Text
						fontSize={0.42}
						font="fonts/Gilroy-ExtraBold.ttf"
						textAlign="center"
					>
						Pirate
						<meshStandardMaterial color="red" />
					</Text>
				</Billboard>

				<mesh
					castShadow
					receiveShadow
					geometry={nodes.Ship_Small.geometry}
					material={materials.Atlas}
					scale={100}
					rotation-y={degToRad(-90)}
				/>
			</Float>
		</group>
	);
};

useGLTF.preload("/models/ship-pirate.glb");
